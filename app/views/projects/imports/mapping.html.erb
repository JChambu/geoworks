<div id="react-mapping-content" class='react-mapping-content'></div>

<% content_for :javascript do %>
  <script type='text/babel'>
    const { useMemo, useState, useCallback } = React;
    const App = ({ columnNames, projectFields, locale, projectType, projectMapping }) => {
      const [selectedColumnNames, setSelectedColumnNames] = useState({});
      const [selectedFields, setSelectedFields] = useState({});

      const selectedColumnNamesList = useMemo(() => Object.values(selectedColumnNames), [selectedColumnNames]);

      const availableColumnNames = useMemo(() => {
        return columnNames.filter(column => !selectedColumnNamesList.includes(column));
      }, [selectedColumnNamesList, columnNames]);

      const handleChangeField = useCallback(
        ({ target: { name, value } }) => {
          setSelectedFields({ ...selectedFields, [name]: value });
        },
        [selectedFields]
      );

      const availableOptions = useCallback(component => {
        return (
          [
            <option value=""></option>,
            ...projectMapping.map(projectField => {
                const shouldBeHidden = Object.values(selectedFields).includes(projectField[0]) && selectedFields[component] !== projectField[0]
                return <option value={projectField[0]} className={shouldBeHidden && 'select__option--hidden'}>{projectField[1]}</option>
              })
          ]

        )
      }, [projectMapping, selectedFields]);

      const removeColumnName = useCallback(
        columnName => () => {
          setSelectedColumnNames({ ...selectedColumnNames, [columnName]: columnName });
        },
        [selectedColumnNames]
      )

      return (
      <div className="container-fluid">
        <div className="card m-2 shadow">
          <div className="card-body p-3">
            <div className="row justify-content-center">
              <h2 className="mx-0">Importación de subformularios</h2>
            </div>
          </div>
        </div>
        <div className="card m-2 shadow">
          <div className="card-body" style={{height: "80vh"}} >
            <div className="" style={{display: "block", height: "80vh", overflow: "auto", overflowX: "hidden"}}>
              <form className="" action="<%= project_type_projects_import_path(@project_type) %>" method="post" id="form_data_children_import">
                <div className="react-mapping-content__data-children  py-3 my-3 mx-auto">
                  <h3 className="react-mapping-content__subtitle">
                    Relación columna campo
                    <span><i class="fas fa-exclamation-circle"></i> Las columnas vacías no serán importadas</span>
                  </h3>
                  <div className="react-mapping-content__data-children__wrapper">
                    {availableColumnNames.map(columnName => {
                      return (
                        <div className="react-mapping-content__data-children__attribute" key={columnName}>
                          <label
                            for={`mapping[${columnName}]`}
                            className="react-mapping-content__data-children__attribute__name"
                          >
                            {columnName}
                          </label>
                          <i className="fa fa-arrow-right"></i>
                          <select className="select form-control form-control-sm" name={`mapping[${columnName}]`} onChange={handleChangeField} style={{display:'inline'}}>
                            {availableOptions(`mapping[${columnName}]`)}
                          </select>
                          <button
                            type="button"
                            name="button"
                            className="react-mapping-content__data-children__attribute__remove-button"
                            onClick={removeColumnName(columnName)}
                          >
                            <i class="fas fa-trash-alt"></i>
                          </button>
                        </div>
                      )
                    })}
                  </div>
                </div>
                <div className="row justify-content-center pt-1 my-1">
                  <div className="react-mapping-content__actions">
                          <a
                            href={`/${locale}/project_types/${projectType.id}/projects/import/new`}
                            className="btn btn-secondary mr-1"
                          >
                            Cancelar
                          </a>
                          <button type="submit" className="enviar btn btn-primary" form="form_data_children_import">Importar</button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      )
    }

    const columnNames = <%= raw @file_headers.to_json %>;
    const locale = "<%= @locale %>";
    const projectType = <%= raw @project_type.to_json %>;
    const projectMapping = <%= raw @project_mapping.to_json %>;

    ReactDOM.render(
      <App
        columnNames={columnNames}
        locale={locale}
        projectType={projectType}
        projectMapping={projectMapping}
      />,
      document.querySelector('#react-mapping-content')
    );
  </script>
<% end %>
